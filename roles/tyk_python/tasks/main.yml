#####  Install python3.4

- name: Install python 3.4 dependancies
  apt:
    name: "{{ item }}"
    state: present
  with_items:
    - build-essential
    - checkinstall
    - libreadline-gplv2-dev
    - libncursesw5-dev
    - libssl-dev
    - libsqlite3-dev
    - tk-dev
    - libgdbm-dev
    - libc6-dev
    - libbz2-dev

- name: Check if python3.4 is installed
  stat:
    path: /usr/local/bin/python3.4
  register: python34_installed

- block:
  - name: Fetch the python 3.4.7 dist
    get_url:
      url:  https://www.python.org/ftp/python/3.4.7/Python-3.4.7.tgz
      dest: /usr/src/Python-3.4.7.tgz

  - name: Untar the file
    shell: tar -xvzf Python-3.4.7.tgz
    args:
      chdir: /usr/src

  - name: Configure python
    shell: ./configure --enable-shared --libdir=/usr/local/lib LDFLAGS="-Wl,--rpath=/usr/local/lib"
    args:
      chdir: /usr/src/Python-3.4.7

  - name: Make install Python-3.4.7
    make:
      chdir: /usr/src/Python-3.4.7
      target: altinstall

  when: not python34_installed.stat.exists

- name: Link the python libs so tyk can find them
  file:
    src: /usr/local/lib/{{item}}
    dest: /usr/lib/x86_64-linux-gnu/{{ item }}
    state: link
  with_items:
  - libpython3.4m.so
  - libpython3.4m.so.1.0

#### Install the
#### https://developers.google.com/protocol-buffers/docs/reference/python-generated#cpp_impl

- name: Check if libprotobuf.so is installed
  stat:
    path: /usr/lib/libprotobuf.so
  register: libprotobuf

- block:

  - name: Fetch the latest protocol buffer library
    get_url:
      url:   https://github.com/google/protobuf/releases/download/v3.4.1/protobuf-python-3.4.1.tar.gz
      dest: /usr/src/protobuf-python-3.4.1.tar.gz

  - name: Untar the file
    shell: tar -xvzf protobuf-python-3.4.1.tar.gz
    args:
      chdir: /usr/src

  - name: Configure the protocol buffer library
    shell: ./configure -prefix=/usr
    args:
      chdir: /usr/src/protobuf-3.4.1

  - name: Make protobuf-3.4.1
    make:
      chdir: /usr/src/protobuf-3.4.1

  - name: Make install protobuf-3.4.1
    make:
      chdir: /usr/src/protobuf-3.4.1
      target: install

  - name: Build and install the Python module
    shell: export PROTOCOL_BUFFERS_PYTHON_IMPLEMENTATION=cpp && python3.4 setup.py build --cpp_implementation && python3.4 setup.py install --cpp_implementation
    args:
      chdir: /usr/src/protobuf-3.4.1/python

  when: not libprotobuf.stat.exists

- name: Run pip3 to check if protobuf==3.4.1 is installed
  shell: pip3.4 freeze
  register: pip3_freeze
  changed_when: false

- debug: var=pip3_freeze

- name: Install HTTP/2-based RPC framework
  pip:
    name: grpcio
    executable: pip3.4
#
# - name: Install python3-setuptools
#   apt:
#     name: python3-setuptools
#     state: present
#
# - name: Install python3-dev
#   apt:
#     name: python3-dev
#     state: present
#
# - name: Run pip3 to check if protobuf==3.1.0 is installed
#   shell: pip3.4 freeze
#   register: pip3_freeze
#   changed_when: false

# - debug: var=pip3_freeze




- name: Give the tyk-gateway-lua service a unique name
  lineinfile:
    name: /etc/init.d/tyk-gateway-lua
    regexp: '^# Provides:\s+tyk-gateway$'
    backrefs: yes
    line: '# Provides:          tyk-gateway-lua'

- name: Give the tyk-gateway-python service a unique name
  lineinfile:
    name: /etc/init.d/tyk-gateway-python
    regexp: '^# Provides:\s+tyk-gateway$'
    backrefs: yes
    line: '# Provides:          tyk-gateway-python'

### Switch from tyk-gateway to tyk-gateway-python

- name: Stop tyk-gateway
  service:
    name: tyk-gateway
    state: stopped
    enabled: no

- name: Start tyk-gateway-python
  service:
    name: tyk-gateway-python
    state: started
    enabled: yes
